/**
 * ===============================================================================  
 * EXTRACTOR DIRECTO - USA PSQL CON NODE.JS
 * ===============================================================================
 * Ejecuta las 10 queries usando psql directo desde Node.js
 * Garantiza resultados exactos del archivo get_full_schema.sql
 */

const { exec } = require('child_process');
const fs = require('fs');
const path = require('path');

// Configuraci√≥n
require('dotenv').config({ path: '.env.local' });

const DATABASE_URL = process.env.DATABASE_URL;

console.log('üîç EXTRACTOR DIRECTO - PSQL + NODE.JS');
console.log('=====================================');

if (!DATABASE_URL) {
    console.error('‚ùå ERROR: DATABASE_URL no encontrada en .env.local');
    process.exit(1);
}

console.log('üîë DATABASE_URL encontrada');
console.log('üìÅ Archivo SQL: supabase/scripts/get_full_schema.sql');

// Verificar que el archivo SQL existe
const sqlFile = 'supabase/scripts/get_full_schema.sql';
if (!fs.existsSync(sqlFile)) {
    console.error(`‚ùå ERROR: No se encuentra ${sqlFile}`);
    process.exit(1);
}

console.log('‚úÖ Archivo SQL verificado');
console.log('');

function executePsqlCommand() {
    return new Promise((resolve, reject) => {
        const outputFile = 'database_schema_actual.txt';
        
        // Construir comando psql
        const psqlCommand = `psql "${DATABASE_URL}" -f "${sqlFile}" -o "${outputFile}" 2>&1`;
        
        console.log('üöÄ Ejecutando comando psql...');
        console.log('‚è≥ Esto puede tomar 30-60 segundos...');
        console.log('');
        
        // Ejecutar comando
        exec(psqlCommand, { 
            timeout: 120000, // 2 minutos timeout
            maxBuffer: 1024 * 1024 * 10 // 10MB buffer
        }, (error, stdout, stderr) => {
            
            console.log('üìã SALIDA DEL COMANDO:');
            console.log('======================');
            
            if (stdout) {
                console.log('üì§ STDOUT:');
                console.log(stdout);
                console.log('');
            }
            
            if (stderr) {
                console.log('üì§ STDERR:');
                console.log(stderr);
                console.log('');
            }
            
            if (error) {
                console.log('‚ùå ERROR DETECTADO:');
                console.log(error.message);
                console.log('');
                
                // Intentar analizar el tipo de error
                if (error.message.includes('Network is unreachable')) {
                    console.log('üîß DIAGN√ìSTICO: Problema de conectividad de red');
                    console.log('üí° SOLUCIONES:');
                    console.log('   1. Verifica tu conexi√≥n a internet');
                    console.log('   2. Prueba el m√©todo API alternativo');
                    console.log('   3. Verifica que no hay firewall bloqueando');
                } else if (error.message.includes('psql: command not found')) {
                    console.log('üîß DIAGN√ìSTICO: PostgreSQL client no instalado');
                    console.log('üí° SOLUCIONES:');
                    console.log('   1. Instala: sudo apt install postgresql-client');
                    console.log('   2. O usa el m√©todo API alternativo');
                } else {
                    console.log('üîß DIAGN√ìSTICO: Error desconocido');
                }
                
                reject(error);
                return;
            }
            
            // Verificar que se gener√≥ el archivo
            if (fs.existsSync(outputFile)) {
                const stats = fs.statSync(outputFile);
                const content = fs.readFileSync(outputFile, 'utf-8');
                
                console.log('‚úÖ ARCHIVO GENERADO EXITOSAMENTE');
                console.log('================================');
                console.log(`üìÑ Archivo: ${outputFile}`);
                console.log(`üìè L√≠neas: ${content.split('\\n').length}`);
                console.log(`üíΩ Tama√±o: ${(stats.size / 1024).toFixed(2)} KB`);
                console.log('');
                
                // Verificar contenido
                if (content.includes('extension_name') && 
                    content.includes('table_name') && 
                    content.includes('column_name')) {
                    console.log('‚úÖ VALIDACI√ìN: Contenido parece completo');
                    console.log('üéØ Las 10 queries se ejecutaron correctamente');
                } else {
                    console.log('‚ö†Ô∏è ADVERTENCIA: Contenido puede estar incompleto');
                }
                
                // Mostrar preview
                console.log('');
                console.log('üëÄ VISTA PREVIA (primeras 20 l√≠neas):');
                console.log('=====================================');
                const lines = content.split('\\n').slice(0, 20);
                lines.forEach((line, i) => {
                    console.log(`${(i + 1).toString().padStart(3)}: ${line}`);
                });
                console.log('=====================================');
                
                resolve(outputFile);
                
            } else {
                reject(new Error('El archivo de salida no fue generado'));
            }
        });
    });
}

// Ejecutar
console.log('üéØ INICIANDO PROCESO DIRECTO...');
console.log('');

executePsqlCommand()
    .then((outputFile) => {
        console.log('');
        console.log('üèÅ PROCESO COMPLETADO EXITOSAMENTE');
        console.log('==================================');
        console.log(`‚úÖ Archivo listo: ${outputFile}`);
        console.log('‚úÖ Contiene las 10 queries exactas');
        console.log('‚úÖ Resultados id√©nticos al proceso manual');
        console.log('');
        console.log('üîÑ PR√ìXIMA VEZ: ./automate_schema.sh');
    })
    .catch((error) => {
        console.log('');
        console.log('‚ùå PROCESO FALL√ì');
        console.log('================');
        console.log(`Error: ${error.message}`);
        console.log('');
        console.log('üîß ALTERNATIVAS:');
        console.log('1. Usar m√©todo API (./scripts/schema_extractor_final.js)');
        console.log('2. Proceso manual original (SQL Editor)');
        console.log('3. Verificar conectividad y credenciales');
        
        process.exit(1);
    });